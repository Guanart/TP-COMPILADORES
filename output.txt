Token DECLARE.SECTION encontrado, Lexema DECLARE.SECTION
Token ABRIR_CORCHETE encontrado, Lexema [
Token ID encontrado, Lexema var1
Token COMA encontrado, Lexema ,
Token ID encontrado, Lexema var2
Token COMA encontrado, Lexema ,
Token ID encontrado, Lexema mensaje
Token CERRAR_CORCHETE encontrado, Lexema ]
Token DECLARATION encontrado, Lexema :=
Token ABRIR_CORCHETE encontrado, Lexema [
Token ID encontrado, Lexema INT
Token COMA encontrado, Lexema ,
Token FLOAT encontrado, Lexema FLOAT
Token COMA encontrado, Lexema ,
Token STRING encontrado, Lexema STRING
Token CERRAR_CORCHETE encontrado, Lexema ]
Token ABRIR_CORCHETE encontrado, Lexema [
Token ID encontrado, Lexema contador
Token COMA encontrado, Lexema ,
Token ID encontrado, Lexema limite
Token CERRAR_CORCHETE encontrado, Lexema ]
Token DECLARATION encontrado, Lexema :=
Token ABRIR_CORCHETE encontrado, Lexema [
Token ID encontrado, Lexema INT
Token COMA encontrado, Lexema ,
Token ID encontrado, Lexema INT
Token CERRAR_CORCHETE encontrado, Lexema ]
Token ENDDECLARE.SECTION encontrado, Lexema ENDDECLARE.SECTION
Token PROGRAM.SECTION encontrado, Lexema PROGRAM.SECTION
Token ID encontrado, Lexema var1
Token ASIGN encontrado, Lexema ::=
Token CONST_INT encontrado, Lexema: 15
Token ID encontrado, Lexema var2
Token ASIGN encontrado, Lexema ::=
Token CONST_REAL encontrado, Lexema: 99.9
Token ID encontrado, Lexema mensaje
Token ASIGN encontrado, Lexema ::=
Token CONST_STRING encontrado, Lexema: "Hola Mundo"
Token WHILE encontrado, Lexema WHILE
Token ABRIR_PARENTESIS encontrado, Lexema (
Token ID encontrado, Lexema var1
Token OP_LOGICO encontrado, Lexema <
Token ID encontrado, Lexema limite
Token CERRAR_PARENTESIS encontrado, Lexema )
Token ID encontrado, Lexema contador
Token ASIGN encontrado, Lexema ::=
Token ID encontrado, Lexema contador
Token OP_ARITMETICO encontrado, Lexema +
Token CONST_INT encontrado, Lexema: 1
Token IF encontrado, Lexema IF
Token ABRIR_PARENTESIS encontrado, Lexema (
Token ID encontrado, Lexema contador
Token OP_LOGICO encontrado, Lexema >=
Token CONST_INT encontrado, Lexema: 10
Token CERRAR_PARENTESIS encontrado, Lexema )
Token ID encontrado, Lexema THEN
Token ID encontrado, Lexema write
Token CONST_STRING encontrado, Lexema: "Contador alcanzo limite"
Token ID encontrado, Lexema mensaje
Token ASIGN encontrado, Lexema ::=
Token CONST_STRING encontrado, Lexema: "Limite alcanzado"
Token ELSE encontrado, Lexema ELSE
Token ID encontrado, Lexema write
Token ID encontrado, Lexema contador
Token ENDIF encontrado, Lexema ENDIF
Token ENDWHILE encontrado, Lexema ENDWHILE
Token ID encontrado, Lexema var3
Token ASIGN encontrado, Lexema ::=
Token CONST_B encontrado, Lexema 0b1101
Token IF encontrado, Lexema IF
Token ABRIR_PARENTESIS encontrado, Lexema (
Token ID encontrado, Lexema var3
Token OP_LOGICO encontrado, Lexema <
Token CONST_INT encontrado, Lexema: 16
Token CON_LOGICO encontrado, Lexema &&
Token ID encontrado, Lexema var2
Token OP_LOGICO encontrado, Lexema >=
Token CONST_REAL encontrado, Lexema: 10.5
Token CERRAR_PARENTESIS encontrado, Lexema )
Token ID encontrado, Lexema THEN
Token ID encontrado, Lexema write
Token ID encontrado, Lexema var3
Token ENDIF encontrado, Lexema ENDIF
Token ID encontrado, Lexema write
Token ID encontrado, Lexema mensaje
Token ID encontrado, Lexema write
Token CONST_REAL encontrado, Lexema: 123.45
Token ID encontrado, Lexema write
Token CONST_B encontrado, Lexema 0b1011
Token ID encontrado, Lexema write
Token ID encontrado, Lexema var2
Token ENDPROGRAM.SECTION encontrado, Lexema ENDPROGRAM.SECTION
