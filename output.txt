Token DECLARE_SECTION encontrado, Lexema DECLARE_SECTION
Token ABRIR_CORCHETE encontrado, Lexema [
Token ID encontrado, Lexema var1
Token COMA encontrado, Lexema ,
Token ID encontrado, Lexema var2
Token CERRAR_CORCHETE encontrado, Lexema ]
Token DECLARACION encontrado, Lexema :=
Token ABRIR_CORCHETE encontrado, Lexema [
Token INTEGER encontrado, Lexema INTEGER
Token COMA encontrado, Lexema ,
Token STRING encontrado, Lexema STRING
Token CERRAR_CORCHETE encontrado, Lexema ]
Token ENDDECLARE_SECTION encontrado, Lexema ENDDECLARE_SECTION
Token PROGRAM_SECTION encontrado, Lexema PROGRAM_SECTION
Token ID encontrado, Lexema var1
Token ASIGN encontrado, Lexema ::=
Token CONST_INT encontrado, Lexema: 15
Token ID encontrado, Lexema var2
Token ASIGN encontrado, Lexema ::=
Token CONST_REAL encontrado, Lexema: 99.9
Token ID encontrado, Lexema mensaje
Token ASIGN encontrado, Lexema ::=
Token CONST_STRING encontrado, Lexema: "Hola Mundo"
Token WHILE encontrado, Lexema WHILE
Token ABRIR_PARENTESIS encontrado, Lexema (
Token ID encontrado, Lexema var1
Token OP_MENOR encontrado, Lexema <
Token ID encontrado, Lexema limite
Token CERRAR_PARENTESIS encontrado, Lexema )
Token THEN encontrado, Lexema THEN
Token ID encontrado, Lexema contador
Token ASIGN encontrado, Lexema ::=
Token ID encontrado, Lexema contador
Token OP_SUMA encontrado, Lexema +
Token CONST_INT encontrado, Lexema: 1
Token IF encontrado, Lexema IF
Token ABRIR_PARENTESIS encontrado, Lexema (
Token ID encontrado, Lexema contador
Token OP_MAYOR_IGUAL encontrado, Lexema >=
Token CONST_INT encontrado, Lexema: 10
Token CERRAR_PARENTESIS encontrado, Lexema )
Token THEN encontrado, Lexema THEN
Token WRITE encontrado, Lexema WRITE
Token CONST_STRING encontrado, Lexema: "Contador alcanzo el limite"
Token ID encontrado, Lexema mensaje
Token ASIGN encontrado, Lexema ::=
Token CONST_STRING encontrado, Lexema: "Limite alcanzado"
Token ELSE encontrado, Lexema ELSE
Token WRITE encontrado, Lexema WRITE
Token ID encontrado, Lexema contador
Token ENDIF encontrado, Lexema ENDIF
Token ENDWHILE encontrado, Lexema ENDWHILE
Token ID encontrado, Lexema var3
Token ASIGN encontrado, Lexema ::=
Token CONST_B encontrado, Lexema 0b1101
Token IF encontrado, Lexema IF
Token ABRIR_PARENTESIS encontrado, Lexema (
Token ABRIR_PARENTESIS encontrado, Lexema (
Token ID encontrado, Lexema var3
Token OP_MENOR encontrado, Lexema <
Token CONST_INT encontrado, Lexema: 16
Token CERRAR_PARENTESIS encontrado, Lexema )
Token CON_AND encontrado, Lexema &&
Token ABRIR_PARENTESIS encontrado, Lexema (
Token ID encontrado, Lexema var2
Token OP_MAYOR_IGUAL encontrado, Lexema >=
Token CONST_REAL encontrado, Lexema: 10.5
Token CERRAR_PARENTESIS encontrado, Lexema )
Token CERRAR_PARENTESIS encontrado, Lexema )
Token THEN encontrado, Lexema THEN
Token WRITE encontrado, Lexema WRITE
Token ID encontrado, Lexema var3
Token ENDIF encontrado, Lexema ENDIF
Token WRITE encontrado, Lexema WRITE
Token ID encontrado, Lexema mensaje
Token WRITE encontrado, Lexema WRITE
Token CONST_REAL encontrado, Lexema: 123.45
Token WRITE encontrado, Lexema WRITE
Token CONST_B encontrado, Lexema 0b1011
Token WRITE encontrado, Lexema WRITE
Token ID encontrado, Lexema var2
Token ENDPROGRAM_SECTION encontrado, Lexema ENDPROGRAM_SECTION
