DECLARE_SECTION
[a,var1,var2,b]:=[FLOAT,INTEGER,FLOAT,FLOAT]
[var3,var4,mensaje,contador]:=[INTEGER,FLOAT,STRING,INTEGER]
ENDDECLARE_SECTION

PROGRAM_SECTION
//* Asignaciones numericas y de string //* comentario multilinea de 1 nivel *//  *//
var1 ::= 15
var2 ::= 20.9
mensaje ::= "Hola Mundo"

//* Declaracion de un ciclo WHILE *//
WHILE (var1 < var2) THEN
    contador ::= contador + 1  //* contador por defecto se inicializa en 0 *//
    var1 ::= var1 + 1
    IF (contador >= 10) THEN
        WRITE "Contador alcanzo el limite"
        IF ((var2 = (98.9 + 1)/2 * 5) && (var1 * 2 + 1 >= 20)) THEN
            WRITE "Limite alcanzado :)"
        ELSE
            b ::= 2
            OPLIST [* [a;b] [10;3;3;5]]
            WRITE "Resultado OPLIST: "
            WRITE a
        ENDIF
    ELSE
        WRITE "Valor contador: "
        WRITE contador //* Muestra el valor de contador *//
    ENDIF
ENDWHILE

var3 ::= 0b1101
WRITE "Asignacion variable binaria: "
WRITE var3

a ::= 5
WRITE "Valor de 'a':"
WRITE a

WRITE "'b' antes de OPLIST: "
WRITE b

OPLIST [+ [a;b] [2;3;5;9;234;53;2;123;3]]
WRITE "'b' despues de OPLIST: "
WRITE b

//* Salidas de prueba *// //* Salidas de prueba *//
WRITE mensaje
WRITE 123.45
WRITE 0b1011
WRITE var2
ENDPROGRAM_SECTION
